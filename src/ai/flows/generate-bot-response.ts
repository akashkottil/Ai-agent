'use server';

/**
 * @fileOverview An AI agent that generates bot responses based on the selected role.
 *
 * - generateBotResponse - A function that generates bot responses based on the selected role.
 * - GenerateBotResponseInput - The input type for the generateBotResponse function.
 * - GenerateBotResponseOutput - The return type for the generateBotResponse function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateBotResponseInputSchema = z.object({
  userMessage: z.string().describe('The message from the user.'),
  botRole: z.string().describe('The current role of the bot (e.g., Real Estate Agent, Financial Advisor).'),
  chatHistory: z.string().optional().describe('The history of the conversation. Optional'),
});

export type GenerateBotResponseInput = z.infer<typeof GenerateBotResponseInputSchema>;

const GenerateBotResponseOutputSchema = z.object({
  botResponse: z.string().describe('The response generated by the bot based on its role.'),
});

export type GenerateBotResponseOutput = z.infer<typeof GenerateBotResponseOutputSchema>;

export async function generateBotResponse(input: GenerateBotResponseInput): Promise<GenerateBotResponseOutput> {
  return generateBotResponseFlow(input);
}

const generateBotResponsePrompt = ai.definePrompt({
  name: 'generateBotResponsePrompt',
  input: {
    schema: GenerateBotResponseInputSchema,
  },
  output: {
    schema: GenerateBotResponseOutputSchema,
  },
  prompt: `You are a bot acting as a {{{botRole}}}. Generate a response to the user message, taking into account the chat history.

Chat History:
{{{chatHistory}}}

User Message:
{{{userMessage}}}

Response:
`,
});

const generateBotResponseFlow = ai.defineFlow(
  {
    name: 'generateBotResponseFlow',
    inputSchema: GenerateBotResponseInputSchema,
    outputSchema: GenerateBotResponseOutputSchema,
  },
  async input => {
    const {output} = await generateBotResponsePrompt(input);
    return output!;
  }
);
